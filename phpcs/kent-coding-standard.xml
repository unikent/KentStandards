<?xml version="1.0"?>
<ruleset name="Kent Standard">
<!-- phpcs rule set based on https://github.com/unikent/KentStandards 
codesniffer ruleset by Christian Cable c.f.cable@kent.ac.uk
corrections to help it match the standard are more than welcome
-->

<!-- PSR2 -->
<rule ref="PSR2">
<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
</rule>

<!-- 1.1. PHP Tags
PHP code MUST use the long <?php ?> tags it MUST NOT use the short-echo <?= ?> tags or other tag variations. 

@TODO - need custom config
-->

<!-- 1.2. Character Encoding
PHP code MUST use only UTF-8 without BOM.

@TODO - need custom config
-->

<!-- 1.3. Line Endings
All PHP files SHOULD use use the Unix LF (linefeed) line ending. Whatever line ending is used it MUST be used consitently throughout a project.

SAME AS PSR2
-->


<!-- 1.4. Whitespace & Indentation

All PHP files MUST end with a single blank line.

SAME AS PSR2
-->

<!-- 
The closing ?> tag MUST be omitted from files containing only PHP.

SAME AS PSR2
-->

<!-- 
There MUST NOT be trailing whitespace at the end of non-blank lines.

SAME AS PSR2
-->

<!-- 
Single blank lines MAY be added to improve readability and to indicate related blocks of code.
SAME AS PSR2
-->

<!--
Code MUST use tabs for indentation, and MUST NOT use spaces for indenting.
The use of spaces is permitted for fine-grained inter-line alignment of operators, values etc.
Kent Rule
-->
<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
</ruleset>



<!--  1.5. Lines

There MUST NOT be more than one statement per line.
SAME AS PSR2

There MUST NOT be a hard limit on line length.
SAME AS PSR2

The soft limit on line length MUST be 120 characters; automated style checkers MUST warn but MUST NOT error at the soft limit.
SAME AS PSR2

Lines SHOULD NOT be longer than 80 characters; lines longer than that SHOULD be split into multiple subsequent lines of no more than 80 characters each.
SAME AS PSR2
-->


<!-- 1.6. Keywords and True/False/Null

PHP keywords MUST be in lower case.
SAME AS PSR2

The PHP constants true, false, and null MUST be in lower case.
SAME AS PSR2
-->

<!-- 1.7. Side Effects
A file SHOULD declare new symbols (classes, functions, constants, etc.) and cause no other side effects, 
or it SHOULD execute logic with side effects, but SHOULD NOT do both.
SAME AS PSR2 (defined in PSR1) 
-->



<!--  Namespace, Use Declarations and Class Names
Namespaces and classes MUST follow PSR-4 "autoloading". This means each class is in a file by itself, 
and is in a namespace of at least one level: a top-level vendor name.

When present, there MUST be one blank line after the namespace declaration.

When present, all use declarations MUST go after the namespace declaration.

There MUST be one use keyword per declaration.

There MUST be one blank line after the use block.
-->